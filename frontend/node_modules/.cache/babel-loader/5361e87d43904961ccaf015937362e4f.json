{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Diploma\\\\typescript\\\\e-commerce\\\\frontend\\\\src\\\\pages\\\\PaymentUpdate.tsx\",\n    _s = $RefreshSig$();\n\nimport { useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PaymentUpdate = props => {\n  _s();\n\n  const stripe = useStripe();\n  const query = new URLSearchParams(useLocation().search);\n  const clientSecret = query.get('payment_intent_client_secret');\n  useEffect(() => {\n    if (stripe && clientSecret) {\n      stripe === null || stripe === void 0 ? void 0 : stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n        let {\n          paymentIntent\n        } = _ref;\n        console.log(paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.id, paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.status);\n      });\n    }\n  }, [clientSecret, stripe]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"PaymentUpdate\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentUpdate, \"HAmxEL2IGd2JmufmKKDAAi8jwBo=\", false, function () {\n  return [useStripe, useLocation];\n});\n\n_c = PaymentUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentUpdate\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/pages/PaymentUpdate.tsx"],"names":["useStripe","React","useEffect","useLocation","PaymentUpdate","props","stripe","query","URLSearchParams","search","clientSecret","get","retrievePaymentIntent","then","paymentIntent","console","log","id","status"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAIA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAkB;AAAA;;AAE/C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GAAG,IAAIC,eAAJ,CAAoBL,WAAW,GAAGM,MAAlC,CAAd;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,GAAN,CAAU,8BAAV,CAArB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACf,QAAII,MAAM,IAAII,YAAd,EAA4B;AACxBJ,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEM,qBAAR,CAA8BF,YAA9B,EAA4CG,IAA5C,CAAiD,QAAqB;AAAA,YAApB;AAACC,UAAAA;AAAD,SAAoB;AAClEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ,aAAYA,aAAZ,uBAAYA,aAAa,CAAEG,EAA3B,EAA+BH,aAA/B,aAA+BA,aAA/B,uBAA+BA,aAAa,CAAEI,MAA9C;AACH,OAFD;AAGH;AAED,GAPQ,EAON,CAACR,YAAD,EAAeJ,MAAf,CAPM,CAAT;AASE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAlBM;;GAAMF,a;UAEEJ,S,EACmBG,W;;;KAHrBC,a","sourcesContent":["import { useStripe } from '@stripe/react-stripe-js'\r\nimport React, { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\ntype Props = {}\r\n\r\nexport const PaymentUpdate = (props: Props) => {\r\n\r\nconst stripe = useStripe()\r\nconst query = new URLSearchParams(useLocation().search)\r\nconst clientSecret = query.get('payment_intent_client_secret');\r\n\r\nuseEffect(() => {\r\n if (stripe && clientSecret) {\r\n     stripe?.retrievePaymentIntent(clientSecret).then(({paymentIntent}) => {\r\n         console.log(paymentIntent?.id, paymentIntent?.status);\r\n     })\r\n }\r\n\r\n}, [clientSecret, stripe])\r\n\r\n  return (\r\n    <div>PaymentUpdate</div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}