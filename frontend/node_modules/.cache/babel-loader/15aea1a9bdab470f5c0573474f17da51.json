{"ast":null,"code":"import axios from \"axios\";\nimport { addressConstant } from \"../constant/addressConstant\";\nexport const addAddress = address => async dispatch => {\n  try {\n    console.log(address);\n    dispatch({\n      type: addressConstant.REQUEST\n    });\n    const user = await axios.post(`http://localhost:5000/api/addAddress`, address, {\n      withCredentials: true\n    });\n    dispatch({\n      type: addressConstant.SUCCESS_ADD_ADDRESS,\n      payload: user.data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n    dispatch({\n      type: addressConstant.FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const editAddress = (email, password) => async dispatch => {\n  try {\n    //console.log(email, password);\n    dispatch({\n      type: addressConstant.REQUEST\n    });\n    const user = await axios.post(`http://localhost:5000/api/login`, {\n      email,\n      password\n    }, {\n      withCredentials: true\n    });\n    dispatch({\n      type: addressConstant.SUCCESS_EDIT_ADDRESS,\n      payload: user.data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n    dispatch({\n      type: addressConstant.FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteAddressAction = address => async dispatch => {\n  try {\n    dispatch({\n      type: addressConstant.REQUEST\n    });\n    const user = await axios.post(`http://localhost:5000/api/deleteAddress`, address, {\n      withCredentials: true\n    });\n    dispatch({\n      type: addressConstant.SUCCESS_DELETE_ADDRESS,\n      payload: user.data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n    dispatch({\n      type: addressConstant.FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/actions/addressActions.ts"],"names":["axios","addressConstant","addAddress","address","dispatch","console","log","type","REQUEST","user","post","withCredentials","SUCCESS_ADD_ADDRESS","payload","data","error","response","message","FAIL","editAddress","email","password","SUCCESS_EDIT_ADDRESS","deleteAddressAction","SUCCESS_DELETE_ADDRESS"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { addressConstant } from \"../constant/addressConstant\";\r\n\r\n\r\nexport const addAddress = (address: string[]) => async (dispatch: any) => {\r\n\r\n    try {\r\n        \r\n        console.log(address)\r\n\r\n        dispatch({type: addressConstant.REQUEST})\r\n        const user = await axios.post(`http://localhost:5000/api/addAddress`, address, {withCredentials: true})\r\n        \r\n        dispatch({\r\n            type: addressConstant.SUCCESS_ADD_ADDRESS,\r\n            payload: user.data\r\n        })\r\n\r\n    } catch (error: any) {\r\n        console.log(error.response.data.message);\r\n        dispatch({\r\n            type: addressConstant.FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const editAddress = (email: string, password: string) => async (dispatch: any) => {\r\n\r\n    try {\r\n        //console.log(email, password);\r\n        dispatch({type: addressConstant.REQUEST})\r\n        const user = await axios.post(`http://localhost:5000/api/login`, {email, password}, {withCredentials: true})\r\n        \r\n        dispatch({\r\n            type: addressConstant.SUCCESS_EDIT_ADDRESS,\r\n            payload: user.data\r\n        })\r\n\r\n    } catch (error: any) {\r\n        console.log(error.response.data.message);\r\n        dispatch({\r\n            type: addressConstant.FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAddressAction = (address: string[]) => async (dispatch: any) => {\r\n\r\n    try {\r\n        \r\n        dispatch({type: addressConstant.REQUEST})\r\n        const user = await axios.post(`http://localhost:5000/api/deleteAddress`, address, {withCredentials: true})\r\n        \r\n        dispatch({\r\n            type: addressConstant.SUCCESS_DELETE_ADDRESS,\r\n            payload: user.data\r\n        })\r\n\r\n    } catch (error: any) {\r\n        console.log(error.response.data.message);\r\n        dispatch({\r\n            type: addressConstant.FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}