{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Diploma\\\\typescript\\\\e-commerce\\\\frontend\\\\src\\\\pages\\\\PaymentUpdate.tsx\",\n    _s = $RefreshSig$();\n\nimport { useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Spinner } from '../components/Spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PaymentUpdate = props => {\n  _s();\n\n  const stripe = useStripe();\n  const query = new URLSearchParams(useLocation().search);\n  const clientSecret = query.get('payment_intent_client_secret');\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (stripe && clientSecret) {\n      stripe === null || stripe === void 0 ? void 0 : stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n        let {\n          paymentIntent\n        } = _ref;\n        (paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.status) && setPaymentStatus(paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.status);\n      });\n    }\n  }, [clientSecret, stripe]);\n  return paymentStatus ? paymentStatus === 'succeeded' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-10 h-screen pt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-[50px] flex items-center text-gray-400 font-medium mt-4 active:outline-none\",\n      onClick: () => navigate(\"/\"),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/arrow-left.png\",\n        alt: \"arrow\",\n        className: \"object-contain w-[60%] h-[60%] mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \" \", \"Home\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pt-10 px-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl text-gray-500\",\n        children: \"Successful Payment \\u2714\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/success-payment.png\",\n        alt: \"success\",\n        className: \" object-contain w-[50%] h-[50%] m-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"lol\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentUpdate, \"RwTP7q6CaevL+3p6JXj8yk6B3UM=\", false, function () {\n  return [useStripe, useLocation, useNavigate];\n});\n\n_c = PaymentUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentUpdate\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/pages/PaymentUpdate.tsx"],"names":["useStripe","React","useEffect","useState","useLocation","useNavigate","Spinner","PaymentUpdate","props","stripe","query","URLSearchParams","search","clientSecret","get","paymentStatus","setPaymentStatus","navigate","retrievePaymentIntent","then","paymentIntent","status"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAIA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAkB;AAAA;;AAE/C,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,KAAK,GAAG,IAAIC,eAAJ,CAAoBP,WAAW,GAAGQ,MAAlC,CAAd;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,GAAN,CAAU,8BAAV,CAArB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAS,EAAT,CAAlD;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIO,MAAM,IAAII,YAAd,EAA4B;AACxBJ,MAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAES,qBAAR,CAA8BL,YAA9B,EAA4CM,IAA5C,CAAiD,QAAqB;AAAA,YAApB;AAACC,UAAAA;AAAD,SAAoB;AACnE,SAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,MAAf,KAAyBL,gBAAgB,CAACI,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEC,MAAhB,CAAzC;AACF,OAFD;AAGH;AAED,GAPQ,EAON,CAACR,YAAD,EAAeJ,MAAf,CAPM,CAAT;AASE,SACEM,aAAa,GAAGA,aAAa,KAAK,WAAlB,gBAChB;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,+EADZ;AAEE,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAC,GAAD,CAFzB;AAAA,8BAIE;AACE,QAAA,GAAG,EAAC,wBADN;AAEE,QAAA,GAAG,EAAC,OAFN;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAJF,EAQK,GARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAC,6BADN;AAEE,QAAA,GAAG,EAAC,SAFN;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,gBAwBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAxBS,gBA0BT,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UA3BN;AA+BD,CAhDM;;GAAMV,a;UAEEP,S,EACmBI,W,EAGjBC,W;;;KANJE,a","sourcesContent":["import { useStripe } from '@stripe/react-stripe-js'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { Spinner } from '../components/Spinner/Spinner';\r\n\r\ntype Props = {}\r\n\r\nexport const PaymentUpdate = (props: Props) => {\r\n\r\nconst stripe = useStripe()\r\nconst query = new URLSearchParams(useLocation().search)\r\nconst clientSecret = query.get('payment_intent_client_secret');\r\nconst [paymentStatus, setPaymentStatus] = useState<string>('')\r\nconst navigate = useNavigate()\r\n\r\nuseEffect(() => {\r\n if (stripe && clientSecret) {\r\n     stripe?.retrievePaymentIntent(clientSecret).then(({paymentIntent}) => {\r\n        paymentIntent?.status && setPaymentStatus(paymentIntent?.status)\r\n     })\r\n }\r\n\r\n}, [clientSecret, stripe])\r\n\r\n  return (\r\n    paymentStatus ? paymentStatus === 'succeeded' ? (\r\n    <div className=\"px-10 h-screen pt-10\">\r\n      <button\r\n        className=\"w-[50px] flex items-center text-gray-400 font-medium mt-4 active:outline-none\"\r\n        onClick={() => navigate(\"/\")}\r\n      >\r\n        <img\r\n          src=\"/images/arrow-left.png\"\r\n          alt=\"arrow\"\r\n          className=\"object-contain w-[60%] h-[60%] mr-4\"\r\n        />{\" \"}\r\n        Home\r\n      </button>\r\n\r\n      <div className=\"text-center pt-10 px-10\">\r\n        <h1 className=\"text-2xl text-gray-500\">Successful Payment ✔️</h1>\r\n        <img\r\n          src=\"/images/success-payment.png\"\r\n          alt=\"success\"\r\n          className=\" object-contain w-[50%] h-[50%] m-auto\"\r\n        />\r\n      </div>\r\n    </div>\r\n    ) : (\r\n        <div>lol</div>\r\n    ) : (\r\n        <Spinner />\r\n    )\r\n\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}