{"ast":null,"code":"import axios from \"axios\";\nimport { addressConstant } from \"../constant/addressConstant\";\nexport const addAddress = address => async dispatch => {\n  try {\n    //console.log(email, password);\n    console.log(address); // dispatch({type: addressConstant.REQUEST})\n    // const user = await axios.post(`http://localhost:5000/api/addAddress`, {address}, {withCredentials: true})\n    // dispatch({\n    //     type: addressConstant.SUCCESS_ADD_ADDRESS,\n    //     payload: user.data\n    // })\n  } catch (error) {\n    console.log(error.response.data.message);\n    dispatch({\n      type: addressConstant.FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const editAddress = (email, password) => async dispatch => {\n  try {\n    //console.log(email, password);\n    dispatch({\n      type: addressConstant.REQUEST\n    });\n    const user = await axios.post(`http://localhost:5000/api/login`, {\n      email,\n      password\n    }, {\n      withCredentials: true\n    });\n    dispatch({\n      type: addressConstant.SUCCESS_EDIT_ADDRESS,\n      payload: user.data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n    dispatch({\n      type: addressConstant.FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const deleteAddress = (email, password) => async dispatch => {\n  try {\n    //console.log(email, password);\n    dispatch({\n      type: addressConstant.REQUEST\n    });\n    const user = await axios.post(`http://localhost:5000/api/login`, {\n      email,\n      password\n    }, {\n      withCredentials: true\n    });\n    dispatch({\n      type: addressConstant.SUCCESS_DELETE_ADDRESS,\n      payload: user.data\n    });\n  } catch (error) {\n    console.log(error.response.data.message);\n    dispatch({\n      type: addressConstant.FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/actions/addressActions.ts"],"names":["axios","addressConstant","addAddress","address","dispatch","console","log","error","response","data","message","type","FAIL","payload","editAddress","email","password","REQUEST","user","post","withCredentials","SUCCESS_EDIT_ADDRESS","deleteAddress","SUCCESS_DELETE_ADDRESS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAuB,MAAOC,QAAP,IAAyB;AAEtE,MAAI;AACA;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAHA,CAKA;AACA;AAEA;AACA;AACA;AACA;AAEH,GAbD,CAaE,OAAOI,KAAP,EAAmB;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAhC;AACAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,eAAe,CAACW,IADjB;AAELC,MAAAA,OAAO,EAAEN,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC;AAFxB,KAAD,CAAR;AAIH;AACJ,CAtBM;AAwBP,OAAO,MAAMI,WAAW,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAqC,MAAOZ,QAAP,IAAyB;AAErF,MAAI;AACA;AACAA,IAAAA,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAAEV,eAAe,CAACgB;AAAvB,KAAD,CAAR;AACA,UAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAY,iCAAZ,EAA8C;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA9C,EAAiE;AAACI,MAAAA,eAAe,EAAE;AAAlB,KAAjE,CAAnB;AAEAhB,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,eAAe,CAACoB,oBADjB;AAELR,MAAAA,OAAO,EAAEK,IAAI,CAACT;AAFT,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOF,KAAP,EAAmB;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAhC;AACAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,eAAe,CAACW,IADjB;AAELC,MAAAA,OAAO,EAAEN,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC;AAFxB,KAAD,CAAR;AAIH;AACJ,CAnBM;AAqBP,OAAO,MAAMY,aAAa,GAAG,CAACP,KAAD,EAAgBC,QAAhB,KAAqC,MAAOZ,QAAP,IAAyB;AAEvF,MAAI;AACA;AACAA,IAAAA,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAAEV,eAAe,CAACgB;AAAvB,KAAD,CAAR;AACA,UAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAY,iCAAZ,EAA8C;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA9C,EAAiE;AAACI,MAAAA,eAAe,EAAE;AAAlB,KAAjE,CAAnB;AAEAhB,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,eAAe,CAACsB,sBADjB;AAELV,MAAAA,OAAO,EAAEK,IAAI,CAACT;AAFT,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOF,KAAP,EAAmB;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAhC;AACAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEV,eAAe,CAACW,IADjB;AAELC,MAAAA,OAAO,EAAEN,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC;AAFxB,KAAD,CAAR;AAIH;AACJ,CAnBM","sourcesContent":["import axios from \"axios\";\r\nimport { addressConstant } from \"../constant/addressConstant\";\r\n\r\n\r\nexport const addAddress = (address: string[]) => async (dispatch: any) => {\r\n\r\n    try {\r\n        //console.log(email, password);\r\n\r\n        console.log(address)\r\n\r\n        // dispatch({type: addressConstant.REQUEST})\r\n        // const user = await axios.post(`http://localhost:5000/api/addAddress`, {address}, {withCredentials: true})\r\n        \r\n        // dispatch({\r\n        //     type: addressConstant.SUCCESS_ADD_ADDRESS,\r\n        //     payload: user.data\r\n        // })\r\n\r\n    } catch (error: any) {\r\n        console.log(error.response.data.message);\r\n        dispatch({\r\n            type: addressConstant.FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const editAddress = (email: string, password: string) => async (dispatch: any) => {\r\n\r\n    try {\r\n        //console.log(email, password);\r\n        dispatch({type: addressConstant.REQUEST})\r\n        const user = await axios.post(`http://localhost:5000/api/login`, {email, password}, {withCredentials: true})\r\n        \r\n        dispatch({\r\n            type: addressConstant.SUCCESS_EDIT_ADDRESS,\r\n            payload: user.data\r\n        })\r\n\r\n    } catch (error: any) {\r\n        console.log(error.response.data.message);\r\n        dispatch({\r\n            type: addressConstant.FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAddress = (email: string, password: string) => async (dispatch: any) => {\r\n\r\n    try {\r\n        //console.log(email, password);\r\n        dispatch({type: addressConstant.REQUEST})\r\n        const user = await axios.post(`http://localhost:5000/api/login`, {email, password}, {withCredentials: true})\r\n        \r\n        dispatch({\r\n            type: addressConstant.SUCCESS_DELETE_ADDRESS,\r\n            payload: user.data\r\n        })\r\n\r\n    } catch (error: any) {\r\n        console.log(error.response.data.message);\r\n        dispatch({\r\n            type: addressConstant.FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}