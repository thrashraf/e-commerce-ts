{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducers } from './reducers/productsReducers';\nimport { productDetailReducers } from './reducers/productDetailReducers';\nimport { loginReducer } from './reducers/loginReducer';\nimport { signupReducers } from './reducers/signupReducers';\nimport { modalReducers } from './reducers/modalReducers'; // ? redux setup\n\nconst reducer = combineReducers({\n  productsReducers,\n  productDetailReducers,\n  loginReducer,\n  signupReducers,\n  modalReducers\n});\nconst initialState = {};\nconst middleware = [thunk];\nexport const store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducers","productDetailReducers","loginReducer","signupReducers","modalReducers","reducer","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,qBAAT,QAAqC,kCAArC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,aAAT,QAA8B,0BAA9B,C,CAEA;;AACA,MAAMC,OAAO,GAAGT,eAAe,CAAC;AAC5BI,EAAAA,gBAD4B;AAE5BC,EAAAA,qBAF4B;AAG5BC,EAAAA,YAH4B;AAI5BC,EAAAA,cAJ4B;AAK5BC,EAAAA;AAL4B,CAAD,CAA/B;AAQA,MAAME,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACT,KAAD,CAAnB;AAEA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAC5BU,OAD4B,EAE5BC,YAF4B,EAG5BP,mBAAmB,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAHS,CAAzB","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productsReducers } from './reducers/productsReducers';\r\nimport { productDetailReducers} from './reducers/productDetailReducers'\r\nimport { loginReducer } from './reducers/loginReducer';\r\nimport { signupReducers } from './reducers/signupReducers';\r\nimport { modalReducers } from './reducers/modalReducers';\r\n\r\n// ? redux setup\r\nconst reducer = combineReducers({\r\n    productsReducers,\r\n    productDetailReducers,\r\n    loginReducer,\r\n    signupReducers,\r\n    modalReducers\r\n});\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n"]},"metadata":{},"sourceType":"module"}