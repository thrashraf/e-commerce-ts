{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Diploma\\\\typescript\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Profile\\\\Address\\\\Address.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showModal } from '../../../services/modal/modalActions';\nimport { Modal } from '../../Modal';\nimport { addAddress, deleteAddressAction } from '../../../services/user-config/addressActions';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Address = props => {\n  _s();\n\n  const [fullName, setFullName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [state, setState] = useState('');\n  const [userAddress, setUserAddress] = useState([]);\n  const [updateIndex, setUpdateIndex] = useState();\n  const [addNewModal, setAddNewModal] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const dispatch = useDispatch();\n  const modalDetail = useSelector(state => state.modalReducers);\n  const userDetail = useSelector(state => state.userReducer);\n  const {\n    userInfo,\n    userLoading\n  } = userDetail;\n  const {\n    modal\n  } = modalDetail;\n  useEffect(() => {\n    if (userLoading) return;\n    if (userInfo.address === null) return;\n    setUserAddress(userInfo.address);\n    console.log(userAddress); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userLoading]); // * create new address\n\n  const openAddAddressModal = () => {\n    dispatch(showModal());\n    setAddNewModal(!modal);\n  };\n\n  const setNewAddress = async () => {\n    const newAddress = {\n      fullName,\n      phoneNumber,\n      address,\n      state\n    };\n    await userAddress.push(newAddress);\n    dispatch(addAddress(userAddress));\n    toast.success('Successful Add');\n  }; //! need to remake this feature 🐛\n  // * update address\n\n\n  const openUpdateAddressModal = id => {\n    dispatch(showModal());\n    setEditModal(!modal);\n    setUpdateIndex(id);\n    setFullName(userAddress[id].fullName);\n    setPhoneNumber(userAddress[id].phoneNumber);\n    setState(userAddress[id].state);\n    setAddress(userAddress[id].address);\n  };\n\n  const updateAddress = id => {\n    const oldAddress = userAddress.map((add, index) => {\n      return id === index ? { ...add,\n        fullName,\n        phoneNumber,\n        state,\n        address\n      } : add;\n    });\n    console.log(oldAddress);\n  }; // * delete address\n\n\n  const deleteAddress = async id => {\n    const address = [...userAddress];\n    address.splice(id, 1);\n    setUserAddress(address);\n    dispatch(deleteAddressAction(address));\n    toast.success('successful Delete');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: `${modal && addNewModal ? 'flex' : 'hidden'} justify-center `,\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        fullName: fullName,\n        phoneNumber: phoneNumber,\n        state: state,\n        address: address,\n        setFullName: setFullName,\n        setPhoneNumber: setPhoneNumber,\n        setState: setState,\n        setAddress: setAddress,\n        save: setNewAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: `${modal && editModal ? 'flex' : 'hidden'} justify-center `,\n      children: updateIndex !== undefined && updateIndex >= 0 ? /*#__PURE__*/_jsxDEV(Modal, {\n        fullName: fullName,\n        phoneNumber: phoneNumber,\n        state: state,\n        address: address,\n        setFullName: setFullName,\n        setPhoneNumber: setPhoneNumber,\n        setState: setState,\n        setAddress: setAddress,\n        save: updateAddress.bind(this, updateIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex justify-between pb-5\",\n      children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Addresses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-white bg-blue-500 px-3 py-1 rounded-md text-sm\",\n        onClick: openAddAddressModal,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), \" Add Address\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), userInfo ? userAddress.length > 0 ? userAddress.map((address, index) => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex mt-5 border-b border-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"w-1/3 grid grid-rows-5 gap-1 text-gray-400 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Full Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Phone Number :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Address :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"State :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"w-full grid grid-rows-5 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.phoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-8 h-7 bg-blue-500 font-[8px] text-white px-2 rounded-full mr-2\",\n          onClick: openUpdateAddressModal.bind(this, index),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit fa-xs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 149\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-8 h-7 bg-red-500 font-[8px] text-white px-2 rounded-full\",\n          onClick: deleteAddress.bind(this, index),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-minus fa-xs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 134\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/not-found.png\",\n        alt: \"\",\n        className: \"m-auto w-[400px] mt-10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-gray-400 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-map-marker-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 56\n        }, this), \" Please Add New Address\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Address, \"5rFu7IPo/Za71rGm18liz86qNz4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/components/Profile/Address/Address.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","showModal","Modal","addAddress","deleteAddressAction","toast","Toaster","Address","props","fullName","setFullName","phoneNumber","setPhoneNumber","address","setAddress","state","setState","userAddress","setUserAddress","updateIndex","setUpdateIndex","addNewModal","setAddNewModal","editModal","setEditModal","dispatch","modalDetail","modalReducers","userDetail","userReducer","userInfo","userLoading","modal","console","log","openAddAddressModal","setNewAddress","newAddress","push","success","openUpdateAddressModal","id","updateAddress","oldAddress","map","add","index","deleteAddress","splice","undefined","bind","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { showModal } from '../../../services/modal/modalActions';\r\nimport { Modal } from '../../Modal';\r\nimport { addAddress, deleteAddressAction } from '../../../services/user-config/addressActions';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\n\r\ntype Props = {};\r\n\r\nexport const Address = (props: Props) => {\r\n\r\n    const [fullName, setFullName] = useState<string>('')\r\n    const [phoneNumber, setPhoneNumber] = useState<string>('')\r\n    const [address, setAddress] = useState<string>('')\r\n    const [state, setState] = useState<string>('')\r\n\r\n    const [userAddress, setUserAddress] = useState<any>([]);\r\n    const [updateIndex, setUpdateIndex] = useState<number>();\r\n\r\n    const [addNewModal, setAddNewModal] = useState<boolean>(false)\r\n    const [editModal, setEditModal] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const modalDetail = useSelector((state: RootStateOrAny) => state.modalReducers);\r\n    const userDetail = useSelector((state: RootStateOrAny) => state.userReducer);\r\n    \r\n    const { userInfo, userLoading } = userDetail;\r\n    const { modal } = modalDetail\r\n    \r\n\r\n    useEffect(() => {\r\n            if (userLoading) return\r\n            if (userInfo.address === null) return\r\n            setUserAddress(userInfo.address)\r\n            console.log(userAddress);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userLoading])\r\n\r\n    // * create new address\r\n    const openAddAddressModal = () => {\r\n        dispatch(showModal())\r\n        setAddNewModal(!modal)\r\n    }\r\n\r\n    const setNewAddress = async () => {\r\n\r\n        const newAddress = {\r\n            fullName,\r\n            phoneNumber,\r\n            address,\r\n            state\r\n        }\r\n        await userAddress.push(newAddress)\r\n        dispatch(addAddress(userAddress))\r\n        toast.success('Successful Add')\r\n    }\r\n\r\n    //! need to remake this feature 🐛\r\n    // * update address\r\n    const openUpdateAddressModal = (id: number) => {\r\n       \r\n        dispatch(showModal())\r\n        setEditModal(!modal)\r\n        setUpdateIndex(id)\r\n\r\n        setFullName(userAddress[id].fullName)\r\n        setPhoneNumber(userAddress[id].phoneNumber)\r\n        setState(userAddress[id].state)\r\n        setAddress(userAddress[id].address)\r\n    }\r\n\r\n    const updateAddress = (id: number) => {\r\n\r\n        const oldAddress = userAddress.map((add: any, index:number) => {\r\n            return id === index ?\r\n            {...add, fullName, phoneNumber, state, address}\r\n            : add\r\n        })\r\n\r\n        console.log(oldAddress);\r\n    }\r\n\r\n\r\n    // * delete address\r\n    const deleteAddress = async (id:number) => {\r\n        \r\n        const address = [...userAddress]\r\n        address.splice(id, 1)\r\n\r\n        setUserAddress(address)\r\n        dispatch(deleteAddressAction(address))\r\n\r\n        toast.success('successful Delete')\r\n    }\r\n\r\n\r\n    \r\n  return <div className=' mt-5'>\r\n\r\n    {/* //? add new modal */}\r\n    <section className={`${modal && addNewModal ? 'flex' : 'hidden'} justify-center `}>\r\n        <Modal fullName={fullName} phoneNumber={phoneNumber} state={state} address={address}\r\n        setFullName={setFullName}\r\n        setPhoneNumber={setPhoneNumber}\r\n        setState={setState}\r\n        setAddress={setAddress}\r\n        save={setNewAddress}\r\n        />\r\n    </section>\r\n\r\n    {/* //? update modal */}\r\n    <section className={`${modal && editModal ? 'flex' : 'hidden'} justify-center `}>\r\n    {updateIndex !== undefined && updateIndex >= 0 ? (\r\n        <Modal fullName={fullName} phoneNumber={phoneNumber} state={state} address={address}\r\n        setFullName={setFullName} setPhoneNumber={setPhoneNumber} setState={setState} setAddress={setAddress} save={updateAddress.bind(this, updateIndex)} />\r\n        )  : null}\r\n    </section> \r\n\r\n    \r\n\r\n    <section className='flex justify-between pb-5'>\r\n        <Toaster />\r\n        <h1>My Addresses</h1>\r\n\r\n        <button className='text-white bg-blue-500 px-3 py-1 rounded-md text-sm' onClick={openAddAddressModal}>\r\n            <i className=\"fas fa-plus\"></i> Add Address\r\n        </button>\r\n    </section>\r\n\r\n\r\n    {userInfo ? userAddress.length > 0 ? \r\n        \r\n        userAddress.map((address: any, index:number) => {\r\n\r\n        return (\r\n        <section className='flex mt-5 border-b border-gray-400' key={index}>\r\n    \r\n            <aside className='w-1/3 grid grid-rows-5 gap-1 text-gray-400 text-sm'>\r\n                <p>Full Name :</p>\r\n                <p>Phone Number :</p>\r\n                <p>Address :</p>\r\n                <p>State :</p>\r\n            </aside>\r\n    \r\n            <aside className='w-full grid grid-rows-5 text-sm'>\r\n                <p>{address.fullName}</p>\r\n                <p>{address.phoneNumber}</p>\r\n                <p>{address.address}</p>\r\n                <p>{address.state}</p>\r\n            </aside>\r\n\r\n            <button className='w-8 h-7 bg-blue-500 font-[8px] text-white px-2 rounded-full mr-2' onClick={openUpdateAddressModal.bind(this, index)}><i className=\"far fa-edit fa-xs\"  ></i></button>\r\n\r\n            <button className='w-8 h-7 bg-red-500 font-[8px] text-white px-2 rounded-full' onClick={deleteAddress.bind(this, index)}><i className=\"fa-solid fa-minus fa-xs\"></i></button>\r\n    \r\n        </section>\r\n    )\r\n    })\r\n\r\n    : (\r\n    <section>\r\n        <img src=\"/images/not-found.png\" alt=\"\" className='m-auto w-[400px] mt-10'/>\r\n        <h1 className='text-center text-gray-400 mt-5'><i className=\"fas fa-map-marker-alt\"></i> Please Add New Address</h1>\r\n    </section>\r\n    ) : null}\r\n\r\n\r\n  </div>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}