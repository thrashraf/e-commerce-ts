{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Diploma\\\\typescript\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Profile\\\\Information.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Information = props => {\n  _s();\n\n  const userDetail = useSelector(state => state.userReducer);\n  const {\n    userInfo,\n    userloading\n  } = userDetail;\n  const [editMode, setEditMode] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  useEffect(() => {\n    console.log(userInfo, userloading);\n\n    if (!userloading) {\n      setFirstName(userInfo.firstName);\n      setLastName(userInfo.lastName);\n      setEmail(userInfo.email);\n      setPhoneNumber(userInfo.phoneNumber);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [userloading]);\n\n  const updateUser = async () => {\n    const id = userInfo.id;\n    await axios.post(\"http://localhost:5000/api/updateUser\", {\n      id,\n      firstName,\n      lastName,\n      email,\n      phoneNumber\n    }).then(res => {\n      console.log(res);\n      setEditMode(!editMode);\n      console.log(\"click\");\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Information, \"lEGis/EOPifgDkUT8owA1tnLXx4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Information;\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/typescript/e-commerce/frontend/src/components/Profile/Information.tsx"],"names":["axios","React","useEffect","useState","useSelector","Information","props","userDetail","state","userReducer","userInfo","userloading","editMode","setEditMode","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","console","log","updateUser","id","post","then","res","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAyBC,WAAzB,QAA4C,aAA5C;;AAKA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAkB;AAAA;;AAE3C,QAAMC,UAAU,GAAGH,WAAW,CAAEI,KAAD,IAA2BA,KAAK,CAACC,WAAlC,CAA9B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BJ,UAAlC;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAU,KAAV,CAAxC;AAEA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAS,EAAT,CAA1C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAS,EAAT,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ,EAAsBC,WAAtB;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChBI,MAAAA,YAAY,CAACL,QAAQ,CAACI,SAAV,CAAZ;AACAG,MAAAA,WAAW,CAACP,QAAQ,CAACM,QAAV,CAAX;AACAG,MAAAA,QAAQ,CAACT,QAAQ,CAACQ,KAAV,CAAR;AACAG,MAAAA,cAAc,CAACX,QAAQ,CAACU,WAAV,CAAd;AACD,KAPa,CAQhB;;AACC,GATQ,EASN,CAACT,WAAD,CATM,CAAT;;AAWA,QAAMa,UAAU,GAAG,YAAY;AAC7B,UAAMC,EAAE,GAAGf,QAAQ,CAACe,EAApB;AAEA,UAAMzB,KAAK,CACR0B,IADG,CACE,sCADF,EAC0C;AAC5CD,MAAAA,EAD4C;AAE5CX,MAAAA,SAF4C;AAG5CE,MAAAA,QAH4C;AAI5CE,MAAAA,KAJ4C;AAK5CE,MAAAA;AAL4C,KAD1C,EAQHO,IARG,CAQGC,GAAD,IAAS;AACbN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAf,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAZG,EAaHM,KAbG,CAaIC,GAAD,IAASR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAbZ,CAAN;AAcD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAuED,CAjHM;;GAAMzB,W;UAEQD,W;;;KAFRC,W","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RootStateOrAny, useSelector } from \"react-redux\";\r\nimport { DynamicInput } from \"../DynamicInput\";\r\n\r\ntype Props = {};\r\n\r\nexport const Information = (props: Props) => {\r\n \r\n  const userDetail = useSelector((state: RootStateOrAny) => state.userReducer);\r\n  const { userInfo, userloading } = userDetail;\r\n\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  \r\n  const [firstName, setFirstName] = useState<string>(\"\");\r\n  const [lastName, setLastName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState<string>(\"\");\r\n  \r\n  useEffect(() => {\r\n    console.log(userInfo, userloading)\r\n    if (!userloading) {\r\n      setFirstName(userInfo.firstName);\r\n      setLastName(userInfo.lastName);\r\n      setEmail(userInfo.email);\r\n      setPhoneNumber(userInfo.phoneNumber);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userloading]);\r\n\r\n  const updateUser = async () => {\r\n    const id = userInfo.id;\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/api/updateUser\", {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        phoneNumber,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setEditMode(!editMode);\r\n        console.log(\"click\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\" \">\r\n      {/* <section className=\"w-full mt-5\">\r\n        <section className=\"relative\">\r\n          <div>\r\n            <img\r\n              src=\"/images/default-header.jpg\"\r\n              alt=\"\"\r\n              className=\"h-[170px] w-full object-cover rounded-t-xl\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"\">\r\n            <span className=\"bg-gray-300  px-[30px] py-[25px] rounded-full text-white absolute top-32 left-5\">\r\n              <i className=\"fas fa-user fa-2x\"></i>\r\n            </span>\r\n\r\n            <button\r\n              className=\"bg-blue-500 px-4 py-1 text-sm float-right text-white rounded-md  my-4\"\r\n              disabled={editMode}\r\n              onClick={() => setEditMode(!editMode)}\r\n              style={editMode ? { backgroundColor: \"#dbeafe\" } : {}}\r\n            >\r\n              <i className=\"far fa-edit\"></i> edit\r\n            </button>\r\n\r\n            <button\r\n              className=\"bg-blue-500 px-4 py-1 text-sm float-right text-white rounded-md  my-4 mx-5\"\r\n              onClick={updateUser}\r\n              style={editMode ? { display: \"block\" } : { display: \"none\" }}\r\n            >\r\n              <i className=\"far fa-save mr-2\"></i>Save\r\n            </button>\r\n          </div>\r\n        </section>\r\n\r\n        {userInfo ? (\r\n          <div>\r\n            <section className=\"grid grid-cols-2 mt-24 gap-5\">\r\n              <DynamicInput\r\n                content={firstName}\r\n                editMode={editMode}\r\n                title=\"First Name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n              <DynamicInput\r\n                content={lastName}\r\n                editMode={editMode}\r\n                title=\"Last Name\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n\r\n              <DynamicInput\r\n                content={email}\r\n                editMode={editMode}\r\n                title=\"Email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <DynamicInput\r\n                content={phoneNumber === null ? \"Not Set\" : phoneNumber}\r\n                editMode={editMode}\r\n                title=\"Phone Number\"\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n              />\r\n            </section>\r\n          </div>\r\n        ) : null}\r\n      </section> */}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}